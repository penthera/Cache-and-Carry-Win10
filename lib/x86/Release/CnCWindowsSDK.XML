<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CnCWindowsSDK</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:Penthera.VirtuosoClient.CCBackplane.CcbClient" -->
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsRegisterResponseMessage">
            <summary>
            The response from a CCB Register Device call.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsRegisterResponseMessage.Preregistred">
            <summary>
            Boolean flag indicating whether the client device was already registered with CCB.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage">
            <summary>
            Response to a call to the CCB Analytics Sync API.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.DeleteAsset">
            <summary>
            This is an array of asset UUIDs. It contains the UUIDs of assets that have been marked 
            for deletion by the  Backplane administrator. The device must remove these assets and 
            report a remote_delete event to the server once the deletion has occurred.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.RemoteWipe">
            <summary>
            This is a boolean value that indicates the Backplane has commanded a remote wipe on this
            device.  If this value is present and true, then the SDK must reset itself to pre-install
            state and emit a notification to the enclosing application.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.ForceFeeds">
            <summary>
            This details the URLs for feeds which a client must process. 
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Mdd">
            <summary>
            Maximum number of devices that can download files (per user)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Moff">
            <summary>
            MAX_OFFLINE - the amount of time a client can go without connecting to CCB, before 
            its content is automatically deleted (in seconds).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Ead" -->
        <!-- Badly formed XML comment ignored for member "P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Eap" -->
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.UsedMddQuota">
            <summary>
            The number of devices currently enabled for download.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.LastEventTimestamp">
            <summary>
            Timestamp in milliseconds of the last event reported to CCB. This timestamp should be 
            used by clients to determine if they can now remove stored events from off the device. 
            Any events recorded with a timestamp older than this can be deleted.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Mpd">
             <summary>
             MAX_PERMITTED_DOWNLOADS the maximum number of assets the device can
            download.A value of -1 means unlimited.
             </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Mda">
             <summary>
             MAX_DOWNLOADS_ACCOUNT the maximum number downloads across the
            user’s account.A value of -1 means unlimited. If the value is greater than -1 then
            permission to download the asset must be granted by the server. (see check download
            permissions on start)
             </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.Mad">
             <summary>
            MAX_ASSET_DOWNLOADS the maximum number of times and asset can be
            downloaded across the user’s account.A value of -1 means unlimited. If the value is
            greater than -1 then permission to download the asset must be granted by the server.
             </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.LicenseKey">
            <summary>
            Base64 encoded string of the license values
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAnalyticsSyncResponseMessage.LicenseSignature">
            <summary>
            HMACSHA256 string signature of the license.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage">
            <summary>
            Response to a call to the CCB Analytics Sync API.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage.AssetMax">
             <summary>
            MAX_ASSET_DOWNLOADS the maximum number of times and asset can be
            downloaded across the user’s account.A value of -1 means unlimited. If the value is
            greater than -1 then permission to download the asset must be granted by the server.
             </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage.AccountMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage.DownloadAllowed">
            <summary>
            Download allowed to check asset is allow for download or not
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage.LicenseKey">
            <summary>
            Base64 encoded string of the license values
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbAssetsSyncResponseMessage.LicenseSignature">
            <summary>
            HMACSHA256 string signature of the license.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbDownloadPermissionCompleteResponse">
            <summary>
            Response to a call to the CCB Download with permission complete.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbDownloadPermissionCompleteResponse.AssetMax">
             <summary>
            MAX_ASSET_DOWNLOADS the maximum number of times and asset can be
            downloaded across the user’s account.A value of -1 means unlimited. If the value is
            greater than -1 then permission to download the asset must be granted by the server.
             </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbDownloadPermissionCompleteResponse.AccountMax">
            <summary>
            
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbDownloadRemovedResponseMessage">
            <summary>
            Response to a call to the CCB Analytics Sync API.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbEventError.EventName">
            <summary>
            The name of the event that caused the error.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbEventError.ErrorReason">
            <summary>
            An enumeration string detailing the type of error for details of the possible 
            error codes see Appendix A
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbFeedsGroup">
            <summary>
            This is something the device register CCB call returns a collection of as "force_feeds".
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.CCBackplane.Models.CcbResponseHeader">
            <summary>
            The response HTTP code to every Backplane request when accessing client endpoints is either a 
            401 (HTTP_UNAUTHORIZED) or a 200 (HTTP_OKAY). Receiving a HTTP_UNAUTHORIZED indicates that the 
            signing of the request has failed. In the case of an HTTP_OKAY, the response body contains 
            a JSON-formatted response_header_object.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbResponseHeader.Timestamp">
            <summary>
            The timestamp of the Backplane, in seconds-since-epoch format using the UTC timezone.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbResponseHeader.ResponseCode">
            <summary>
            An integer response code used to pragmatically identify the response state of the Backplane.  
            Possible values are identified in Appendix A of this document and also within the individual 
            endpoints documented below. A negative response code indicates that an error has occurred.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.CCBackplane.Models.CcbResponseHeader.ResponseString">
            <summary>
            A string suitable for display to the user identifying any errors that have occurred.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Internal.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of rootInstance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the rootInstance listening for the event.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`3._weakSource">
            <summary>
            To hold a reference to source object. With this instance the WeakEventListener 
            can guarantee that the handler get unregistered when listener is released.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`3._onEventAction">
            <summary>
            Delegate to the method to call when the event fires.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`3._onDetachAction">
            <summary>
            Delegate to the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`3.#ctor(`0,`1)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="rootInstance">Instance subscribing to the event.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`3.OnEvent(System.Object,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`2._weakInstance">
            <summary>
            WeakReference to the rootInstance listening for the event.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`2._weakSource">
            <summary>
            To hold a reference to source object. With this instance the WeakEventListener 
            can guarantee that the handler get unregistered when listener is released.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`2._onEventAction">
            <summary>
            Delegate to the method to call when the event fires.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakEventListener`2._onDetachAction">
            <summary>
            Delegate to the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="rootInstance">Instance subscribing to the event.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakEventListener`2.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakEventListener`2.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`2.OnEvent(System.Object)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakEventListener`2.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1._weakInstance">
            <summary>
            WeakReference to the rootInstance listening for the event.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1._onEventAction">
            <summary>
            Delegate to the method to call when the event fires.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1._onDetachAction">
            <summary>
            Delegate to the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="rootInstance">Instance subscribing to the event.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1.OnEvent(System.Object)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Internal.WeakStaticSourceEventListener`1.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Internal.Parser.IManifestParserConsumer">
            <summary>
            Provides the segment and initialization data to the consumer whilst parsing
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Models.Asset">
            <summary>
            An item queued for download in Virtuoso.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Models.Asset.FractionComplete">
            <summary>
            How much of this asset Virtuoso has already downloaded, as a fraction between 0.0 and 1.0
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Models.Asset.DownloadOperation">
            <summary>
            Download operation 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Penthera.VirtuosoClient.Models.Asset.AssetSegmentedFileProperties.GetNextSegment" -->
        <member name="P:Penthera.VirtuosoClient.Models.Asset.PlatformHelper.ProcessorCount">
            <summary>
            Gets the number of available processors
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Models.Asset.PlatformHelper.IsSingleProcessor">
            <summary>
            Gets whether the current machine has only a single processor.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Models.Singleton`1">
            <summary>
            Generic lazy singleton object.
            Thanks to Jeroen van den Heuvel:
            http://www.c-sharpcorner.com/uploadfile/snorrebaard/the-quest-for-the-generic-singleton-in-C-Sharp/
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IBackplane">
            <summary>
            The IBackplane interface provides you the access to the APIs for communication with the Backplane
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplane.BackplaneSettings">
            <summary>
            Concrete Instance of the BackplaneSettings Interface.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplane.LastAuthenticated">
            <summary>
            The last time this device successfully synced with the backplane (Default: DateTime.MinValue)
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.ChangeDownloadEnablementAsync(System.Boolean)">
            <summary>
            Request to update the "download-enabled" flag for the current device. The Backplane will persist the change.
            The method only succeeds if and when the Backplane persists the change.In other words,
            Virtuoso must be able to reach the Backplane and already be registered with the Backplane.
            Completion is reported through the<code> requestComplete</code> callback in <code>IBackplaneObserver</code> with a callback type of <code>BackplaneCallbackType.DOWNLOAD_ENABLEMENT_CHANGE</code>.
            </summary>
            <param name="aEnable">The boolean to be set on "download-enabled" flag</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.ChangeDownloadEnablementAsync(System.Boolean,Penthera.VirtuosoClient.Public.IDevice)">
            <summary>
            Request to update the "download-enabled" flag for the a device. The Backplane will persist the change.
            The method only succeeds if and when the Backplane persists the change.In other words,
            Virtuoso must be able to reach the Backplane and already be registered with the Backplane.
            Completion is reported through the<code> requestComplete</code> callback in <code>IBackplaneObserver</code> with a callback type of <code>BackplaneCallbackType.DOWNLOAD_ENABLEMENT_CHANGE</code>.
            </summary>
            <param name="aEnable">The boolean to be set on "download-enabled" flag</param>
            <param name="aDevice">The device to have settings updated</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.ChangeNicknameAsync(System.String)">
            <summary>
            Change the registered nickname for this device.
            The method only succeeds if and when the Backplane persists the change. In other words,
            Virtuoso must be able to reach the Backplane and already be registered with the Backplane.
            Completion is reported through the requestComplete&gt; callback in IBackplaneObserver
            with a callback type of BackplaneCallbackType.NAME_CHANGE.
            </summary>
            <param name="aNewNickname">The new nickname of the device</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.ChangeNicknameAsync(System.String,Penthera.VirtuosoClient.Public.IDevice)">
            <summary>
            Change the registered nickname for a device.
            The method only succeeds if and when the Backplane persists the change. In other words,
            Virtuoso must be able to reach the Backplane and already be registered with the Backplane.
            Completion is reported through the requestComplete&gt; callback in IBackplaneObserver
            with a callback type of BackplaneCallbackType.NAME_CHANGE.
            </summary>
            <param name="aNewNickname">The new nickname of the device</param>
            <param name="aDevice">Device to have nickname updated</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.Devices">
            <summary>
            Create a instance for the device.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.SyncAsync">
            <summary>
            Force a synchronizes 
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.UnregisterAsync">
            <summary>
            Unregisters the current device.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.UnregisterDeviceAsync(Penthera.VirtuosoClient.Public.IDevice)">
            <summary>
            Request to deregister a different device that is associated with the current user.
            The method only succeeds if and when the Backplane persists the change.In other words,
            Virtuoso must be able to reach the Backplane and already be registered with the Backplane.
            Completion is reported through the<code> requestComplete</code> callback in <code>IBackplaneObserver</code> with a callback type of <code>BackplaneCallbackType.DEVICE_UNREGISTERED</code>.
            </summary>
            <param name="aDevice">The device to be unregistered</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IBackplane.RegisterBackplaneEventAsync(Penthera.VirtuosoClient.Public.IBackplaneEvent)">
            <summary>
            Registers the backplane event asynchronous.
            </summary>
            <param name="backplaneEvent">The backplane event.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IBackplaneEvent">
            <summary>
            This represents a BackplaneEvent
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEvent.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEvent.AssetId">
            <summary>
            Gets or sets the asset identifier.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEvent.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IBackplaneEventData">
            <summary>
            This interface allows you to provide the data that will be sent on a BackplaneEvent
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEventData.lData">
            <summary>
            Gets or sets the l data.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEventData.sData">
            <summary>
            Gets or sets the s data.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneEventData.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.BackplaneRequestComplete">
            <summary>
            Delegate BackplaneRequestComplete
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IBackplanePermission">
            <summary>
            When the MAD and/or the MDA settings are enabled on the Backplane.
            This interface represents the data returned in a permission request
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplanePermission.Account">
            <summary>
            Gets the account.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplanePermission.AccountMax">
            <summary>
            Gets the account maximum.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplanePermission.Asset">
            <summary>
            Gets the asset.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Penthera.VirtuosoClient.Public.IBackplanePermission.AssetMax" -->
        <member name="P:Penthera.VirtuosoClient.Public.IBackplanePermission.DownloadAllowed">
            <summary>
            Gets a value indicating whether [download allowed].
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IAssetDownloads">
            <summary>
            This details the number of assets you have against each device.
            It is part of Backplane Permission Response
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAssetDownloads.TotalDownloads">
            <summary>
            Gets the total downloads.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAssetDownloads.Downloads">
            <summary>
            Gets the list of downloads.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IAccountDeviceDownloads">
            <summary>
            This details the number of assets you have against each device on your account.
            It is part of Backplane Permission Response
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAccountDeviceDownloads.Device">
            <summary>
            Gets the device.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAccountDeviceDownloads.TotalDownloads">
            <summary>
            The amount of total downloads.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IAssetDeviceDownloads">
            <summary>
            This is the representation of the Assets to Device mappings in the IAccountDeviceDownloads
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAssetDeviceDownloads.PendingDownloads">
            <summary>
            The total amount of pending downloads.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAssetDeviceDownloads.CurrentDownloads">
            <summary>
            The total amount of current downloads.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IAccountDownloads">
            <summary>
            This details the number of assets you have against each account.
            It is part of Backplane Permission Response
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAccountDownloads.TotalDownloads">
            <summary>
            The amount total of downloads.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAccountDownloads.Downloads">
            <summary>
            A list of all downloads.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.EAssetStatus">
            <summary>
            Allowable states that a CNC asset can be in.  Returned via the 'Status' property on an Asset.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.Status" />
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_None">
            <summary>
            Asset exists, but is not in the download queue
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Pending">
            <summary>
            Asset is in download queue, waiting its turn
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Preparing">
            <summary>
            Asset is preparing to download.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Attaching">
            <summary>
            Asset is preparing to download.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Ready">
            <summary>
            Asset is ready to download
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Active">
            <summary>
            Download is in progress for this asset
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Blocked">
            <summary>
            Asset is blocked
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Paused_Stopped">
            <summary>
            Asset is Paused or Stopped
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.KVDE_Download_Error">
            <summary>
            CNC has marked this asset Error
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Expired">
            <summary>
            CNC has marked this asset as expired
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_NotAvailable">
            <summary>
            Asset has a publish date in the future, and thus not available
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Complete">
            <summary>
            Download is complete; asset is stored locally
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetStatus.kVDE_Download_Deleted">
            <summary>
            CNC has deleted this asset
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IStatusProvider">
            <summary> Interface that provides the status of the asset. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.EDownloadError">
            <summary>
            Error states that CNC can be in when downloading an asset.  Returned via the 'DownloadError' and
            'PreviousDownloadError' property on an Asset.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadError" />
             <seealso cref="M:Penthera.VirtuosoClient.Public.IAsset.ResetErrorState" />
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_No_Error">
            <summary>
            CNC encountered no errors downloading this asset.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Network_Error">
            <summary>
            CNC encountered a network problem downloading asset.
            </summary>
            <example>404 or 416 HTTP error</example>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Error_FileSize">
            <summary>
            CNC encountered an error on the File Size
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Error_MimeType">
            <summary>
            CNC encountered an error on MimeType
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Error_Denied_Account">
            <summary>
            CNC sets this asset as Denied Account error
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Error_Denied_Assets">
            <summary>
            CNC sets this asset as Denied Assets error
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Error_MaxPermitted_Assets">
            <summary>
            CNC sets this asset as Max Permitted Assets error
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.KVDE_Download_Error_Corrupt">
            <summary>
            CNC sets this asset as Corrupt error
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EDownloadError.kVDE_Download_Max_Retries_Exceeded">
            <summary>
            CNC has attempted to download this asset the max times permitted.
            Will not try again until you call ResetErrorState.
            You can still see the last error by calling PreviousDownloadError on the Asset.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.DownloadCompleteEventHandler">
            <summary>
            Sent when download of an Asset finishes
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.EAssetType">
            <summary>
            They type of Asset.
            Either a Single flat file or a Segmented file.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetType.NotSet">
            <summary>
            The Asset Type has not yet been set and is unknown.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetType.Single">
            <summary>
            A single flat file.
            </summary>
            <exemple>
            Example: MP4
            </exemple>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetType.Segmented">
            <summary>
            A Segmented File.
            </summary>
            <example>
            Examples: HSS,HLS,MPEG-DASH
            </example>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.EAssetType.Segment">
            <summary>
            A Segment from a Segmented File.
            </summary>
            <example>
            Examples: HSS,HLS,MPEG-DASH
            </example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IAsset">
            <summary>
            Parent interface for all CNC assets.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Id">
            <summary>
            An unique autoincrement identifier of the asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.MediaPlayBackSource">
            <summary>
            The Source to be set on Player
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.SegmentedFileProperties">
            <summary>
            Aditional data related to Segmented Assets
            </summary>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IAsset.DownloadComplete">
            <summary>
            Called when this asset successfully finishes download
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Uuid">
            <summary>
            A universally unique identifier (UUID) that CNC generates when it created this asset.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.AssetId">
            <summary>
            An unique identifier that you provide when instantiating this asset
            </summary>
            <remarks>CNC uses the assetID in log events and for remote delete/wipe requests.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.AssetType">
            <summary>
            The type of Asset.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Description">
            <summary>
            A human-readable description for this asset
            </summary>
            <remarks>CNC does not use this internally, but does include it in logging output.
            You provided this value when instantiating this asset.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.ExpectedSize">
            <summary>
            Expected size of this asset, in bytes
            </summary>
            <remarks>You should provide this value to CNC so that CNC can validate this asset after downloading.
            If you don't supply a file size in advance, then CNC will use the file size advertised by the HTTP
            server when download commences.
            <para>CNC can validate sizes for Assets. When it does so, CNC will verify that the observed file
            size matches expectedSize. If they do not match,  CNC will mark the asset in error, with the code
            kVDE_Download_EngineError, and will send an event containing an error with code kVDE_File_Length_Mismatch.</para>
            <para>Providing this value is optional but strongly recommended.</para></remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.CurrentSize">
            <summary>
            The current size of this asset CNC has already downloaded
            </summary>
            <remarks>The amount of data that CNC has downloaded for this asset (in bytes)</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.FractionComplete">
            <summary>
            How much of this asset CNC has already downloaded, as a fraction between 0.0 and 1.0
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.FileUrl">
            <summary>
            Where this file exists on the Internet
            </summary>
            <remarks>The asset URL is the addressable location on the Internet.
            It must include any required security or CDN tokens.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.DownloadErrorCount">
            <summary>
            The number of times this file has failed during the current pass.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadRetryCount" />
            <remarks>When CNC fails to download a file, it will automatically retry the
            download a certain (internally defined) number of times before proceeding
            to the next asset in the queue.  This property identifies how many times the download
            has tried (and failed) on the current pass.  The DownloadRetryCount is how many passes CNC has
            made through the queue while failing to download this item.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.DownloadRetryCount">
            <summary>
            How many passes CNC has made attempting to download this file
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadErrorCount" />
            <remarks>If CNC fails to download an asset in the queue, it will retry the download a certain
            (internally-defined) number of times, before moving to the next item in the queue.  In this way,
            CNC cycles through the entire queue. CNC will perform a certain (internally-defined)
            number of repeat attempts for each previously-failed download, before stopping and reporting
            that the queue is blocked.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.DownloadError">
            <summary>
            The most recent download-related error this asset encountered.  If the download
            has not encountered an error, will be kVDE_Download_No_Error.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.PreviousDownloadError">
            <summary>
            The most recent download-related error this asset encountered.  If the download
            has not encountered an error, will be kVDE_Download_No_Error.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Status">
            <summary>
            Indicates the current status of the asset.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.FilePath">
            <summary>
            The on-disk file path for this file. Will be nil if CNC hasn't completed downloading this file yet,
            or if the file is unavailable due to SDK business rules (e.g. it's outside of its availability window).
            </summary>
            <remarks><note type="warning">If this file is not available (e.g. it's outside its availability window), this property
            will return null, preventing access to the downloaded asset.</note></remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Metadata">
            <summary>
            Metadata provided by Client.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.PublishDate">
            <summary>
            When this asset should become available
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryDate" />
            <remarks>CNC will download assets as soon as they are enqueued.  In some cases, however, you may wish to embargo an asset.
            You do so by setting the PublishDate property in the future. Until this date, CNC will disallow access to this
            asset.  A nil value means the Asset is immediately available.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryDate">
            <summary>
            As soon as possible after 'expiryDate' has passed, CNC automatically deletes the asset.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.PublishDate" />
            <remarks>A null value means the Asset has no expiry.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterPlay">
            <summary>
            After the asset is first played, as soon as possible after 'expiryAfterPlay' time has elapsed,
            CNC automatically deletes the asset.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.FirstPlayDateTime" />
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterDownload" />
            <remarks>A value of zero or null means the asset never expires.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterDownload">
            <summary>
            After the asset has completed download, as soon as possible after 'expiryAfterDownload' time has elapsed,
            CNC automatically deletes the asset.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadCompleteDateTime" />
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterPlay" />
            <remarks>A value of zero or null means the asset never expires.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.DownloadCompleteDateTime">
            <summary>
            When CNC finished downloading this asset.  Null if CNC hasn't completed the download yet.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterDownload" />
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.FirstPlayDateTime">
            <summary>
            When this asset was first played.  Null if CNC is not aware of this asset being played yet.
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.ExpiryAfterPlay" />
            <seealso cref="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.LogPlayStart(Penthera.VirtuosoClient.Public.IAsset)" />
            <remarks>CNC doesn't always know when an asset is played.  Therefore,  you must set this value when
            playback of this asset begins, by calling the Logger's 'LogPlayStart' method.  This allows CNC
            to enforce 'ExpiryAfterPlay'.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IAsset.IsWithinAvailabilityWindow">
            <summary>
            Is this asset within its availability window?
            </summary>
            <returns>Whether this Asset is within its availability window</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IAsset.EffectiveExpiryDate">
            <summary>
            When CNC predicts this asset will expire.
            </summary>
            <returns>A DateTime object representing CNC's predicted expiry time for this Asset</returns>
            <remarks>Returns the soonest date based on all the expiry constraints for this asset.
            A return value of DateTime.MaxValue means the item never expires.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Expired">
            <summary>
            Is this asset already expired?
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IAsset.ResetErrorState">
            <summary>
            Clears this asset's internal retry count, so CNC will retry downloading it
            </summary>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadErrorCount" />
            <seealso cref="P:Penthera.VirtuosoClient.Public.IAsset.DownloadRetryCount" />
            <remarks>When CNC fails to download an asset, for whatever reason, CNC will automatically retry the
            download N times. If CNC fails N times, it will move to the next asset in the download queue.
            Eventually CNC will loop through the download queue and reach this asset again, and re-attempt the
            download N more times. At some point, CNC will have looped through the queue M times, and attempted
            to download the asset M*N times.
            <para>
            After M*N attempts, CNC gives up, and will no longer atempt to download the asset.  When all pending
            assets have exceeded the allowable retries, CNC enters the kVDE_Download_Max_Retries_Exceeded state and
            stops processing downloads until new assets are enqueued or existing assets are cleared.</para>
            <para>This method resets the retry state, so CNC will try downloading again.</para></remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IAsset.Duration">
            <summary>
            The total duration of this asset in seconds.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.ISegmentedFileProperties">
            <summary>
            Aditional data related to Segmented Assets
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.SegmentedAssetType">
            <summary>
            Gets the type of the segmented asset.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.TotalSegments">
            <summary>
            Number of segments contained within this asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.SegmentErrorCount">
            <summary>
            Number of segments that errored during download.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.CompletedCount">
            <summary>
            Number of segments already downloaded
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.BitRate">
            <summary>
            Bitrate of this asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.AudioBitRate">
            <summary>
            Audio bitrate of this asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.TargetDuration">
            <summary>
            The total duration of this asset in seconds.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.VideoBitRate">
            <summary>
            Video bitrate of this asset.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegmentedFileProperties.RemoteBaseUrl">
            <summary>
            Remote base URL of this asset.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.ISegment">
            <summary>
            Represent a single segment within a Segmented Asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.ISegment.SegmentType">
            <summary>
            The type of the segment.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.ESegmentedAssetType">
            <summary>
            The enumerador type of the segmented asset.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentedAssetType.NONE">
            <summary>
            Asset type is not defined
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentedAssetType.HSS">
            <summary>
            Asset type is HSS - HTTP Smooth Streaming
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentedAssetType.HLS">
            <summary>
            Asset type is HLS - HTTP Live Streaming
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentedAssetType.MPD">
            <summary>
            Asset type if MPD - Media Presentation Description
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.ESegmentType">
            <summary>
            The enumerador type of the segment.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentType.OTHER">
            <summary>
            The type of the segment is neither Video or Audio
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentType.VIDEO">
            <summary>
            The type of the segment is Video
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.ESegmentType.AUDIO">
            <summary>
            The type of the segment is Audio
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IBackplaneSettings">
            <summary>
            This are the settings governed by the Backplane
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.BackplaneUrl">
            <summary>
            Gets the backplane URL.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.UserID">
            <summary>
            Gets the user identifier.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.ExternalDeviceID">
            <summary>
            Gets the external device identifier.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.Nickname">
            <summary>
            User assigned name for Device.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.DevicePushToken">
            <summary>
            Gets the device push token.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.DownloadsEnabled">
            <summary>
            Whether or not the client will download.  This is a client-side option that allows the user to manually
            pause/resume downloads, independent of other internal business rules.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.DeviceID">
            <summary>
            Gets the device identifier.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.MaximumDevicesForDownload">
            <summary>
            The number of devices that can be enabled for download simultaneously (Default: 5)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.MaximumOfflinePeriod">
            <summary>
            The amount of time the device can be disconnected from the backplane before assets
            become unavailable, in seconds (Default: 7 days)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.DefaultExpiryAfterDownload">
            <summary>
            The amount of time after download that an asset can exist on the device, in seconds (Default: Forever)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.DefaultExpiryAfterPlay">
            <summary>
            The amount of time the after initial playback that an asset can exist on the device, in seconds  (Default: Forever)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.UsedDeviceQuota">
            <summary>
            The number of devices currently enabled for download (Default: 0)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.MaxPermittedDownloads">
            <summary>
            Resets the MaxAssetDownloads setting to the internal default value.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.MaxDownloadsAccount">
            <summary>
            The amount of time after download that an asset can exist on the device, in seconds (Default: Forever)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.MaxAssetDownloads">
            <summary>
            Resets the MaxAssetDownloads setting to the internal default value.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.PrivateKey">
            <summary>
            A string with the Private Key for connection.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.PublicKey">
            <summary>
            A string with the Public Key for connection
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IBackplaneSettings.RequirePermissionOnQueue">
            <summary>
            Gets a value indicating whether [require permission on queue].
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IDevice">
            <summary>
            Represents a specific device known to CNC
            </summary>
            <remarks>A convenience class to access device-related values.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.DeviceID">
            <summary>
            CNC automatically generates a unique ID for each device.
            This UUID is not tied to any OS-defined UUID.  It will persist across application
            upgrades, but will not persist across device restores or application reinstalls.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.ExternalDeviceID">
            <summary>
            When you call the VirtuosoDownloadEngine's startupWithBackplane method, you may
            supply your own, optional, external device ID.  CNC reports this value to
            the Backplane, which maintains this value along with the CNC-assigned device ID.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.ClientVersion">
            <summary>
            The application version reported by the Package.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.DeviceModel">
            <summary>
            The device model reported by the operating system
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.DeviceVersion">
            <summary>
            The OS version reported by the operating system
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.RemoteWipePending">
            <summary>
            True when this device is slated for remote-wipe.
            </summary>
            <remarks>The device is in this state from the time you ask the Backplane to send a remote-wipe to
            the device, until the device actually receives and performs the remote-wipe.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.LastSyncDate">
            <summary>
            When this device last synced with the Backplane
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.LastModifiedDate">
            <summary>
            When this device's info was last changed
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.CreatedDate">
            <summary>
            When the Backplane created a record for this device
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.ThisDevice">
            <summary>
            Whether this object represents the device we're running on now
            </summary>
            <value><c>true</c> if [this device]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.DownloadEnabled">
            <summary>
            Whether this device should allow downloads
            </summary>
            <remarks>The Backplane enforces a limit on the number of devices permitted to download per user account.
            The Backplane communicates the 'DownloadEnabled' value to the SDK during a sync.
            This property is the most recent value received from the Backplane.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IDevice.NickName">
            <summary>
            This device's nickname. Same as the device ID, by default.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IEvent">
            <summary>   Interface for event. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventAppLaunch">
            <summary>   Gets a value indicating whether the event application launch. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventQueueForDownload">
            <summary>   Gets a value indicating whether the event queue for download. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventDownloadStart">
            <summary>   Gets a value indicating whether the event download start. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventDownloadComplete">
            <summary>   Gets a value indicating whether the event download complete. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventUserTriggeredDelete">
            <summary>
            Gets or sets a value indicating whether the event user triggered delete.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventAssetExpire">
            <summary>   Gets or sets a value indicating whether the event asset expire. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventSyncWithServer">
            <summary>
            Gets or sets a value indicating whether the event synchronise with server.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventPlayStart">
            <summary>   Gets a value indicating whether the event play start. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventPlayStop">
            <summary>   Gets a value indicating whether the event play stop. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventSubscribe">
            <summary>   Gets or sets a value indicating whether the event subscribe. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventUnsubscribe">
            <summary>   Gets or sets a value indicating whether the event unsubscribe. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventReset">
            <summary>   Gets a value indicating whether the event reset. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventCustom">
            <summary>   Gets or sets a value indicating whether the event custom. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventAssetRemovedFromQueue">
            <summary>
            Gets or sets a value indicating whether the event asset removed from queue.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventDownloadError">
            <summary>   Gets a value indicating whether the event download error. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventMaxErrorReset">
            <summary>   Gets or sets a value indicating whether the event maximum error reset. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventAssetDelete">
            <summary>   Gets or sets a value indicating whether the event asset delete. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventDownloadLimitReached">
            <summary>   Gets a value indicating whether the event download limit reached. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IEvent.EventPlaybackInitiated">
            <summary>   Gets a value indicating whether the event playback initiated. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.License.ELicenseState">
            <summary>
            Enum ELicenseState
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_OKAY">
            <summary>
            The license okay
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_VERIFY_SIG">
            <summary>
            The license fail verify signature
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_VERIFY_SIG_EX">
            <summary>
            The license fail verify signature ex
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_VERIFY_SIG_NO_KEYS">
            <summary>
            The license fail verify signature due no keys
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_NO_LICENSE">
            <summary>
            The license fail due no license
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_INVALID_OBJ">
            <summary>
            The license fail due invalid object
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_SDK">
            <summary>
            The license fail due SDK
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_DATE">
            <summary>
            The license fail due out of date
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_DAY">
            <summary>
            The license fail due day
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELicenseState.LICENSE_FAIL_NON_TRUSTED_TIME">
            <summary>
            The license fail due non trusted time
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.License.ELIcenseEvent">
            <summary>
            The enumerator of the state of the License Event
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELIcenseEvent.UPDATED">
            <summary>
            License Event was updated
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELIcenseEvent.STATE_CHANGE">
            <summary>
            License state has the state change
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.License.ELIcenseEvent.LOADED">
            <summary>
            License state has the state loaded
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.License.ILicenseState">
            <summary>
            State of the license
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicenseState.LicenseState">
            <summary> Gets the state of the license. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.License.ILicenseProvider">
            <summary>
            The interface that provides you the License
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicenseProvider.LicenseKey">
            <summary>
            Gets the license key.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicenseProvider.LicenseSignature">
            <summary>
            Gets the license signature.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.License.ILicense">
            <summary>
            Provides you with the data associated with your asset
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicense.IsValid">
            <summary> Gets a value indicating whether this object is valid. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicense.ExpiryDate">
            <summary>
            Gets the expiry date.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicense.ExpiryDays">
            <summary>
            Gets the expiry days.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.License.ILicense.MaxSdkVersion">
            <summary>
            Gets the maximum SDK version.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.AuthenticationStatus">
            <summary> Values that represent authentication status. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.AuthenticationStatus.Authentication_OK">
            <summary> An enum constant representing the authentication ok option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.AuthenticationStatus.Authentication_Failure">
            <summary> An enum constant representing the authentication failure option. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoClientStatus">
            <summary>
            Current activity status of CNC's download engine.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Unknown">
            <summary>
            CNC hasn't finished starting up; status isn't determined.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Downloading">
            <summary>
            CNC is actively downloading
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Idle">
            <summary>
            Downloading is enabled, but queue is empty
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Disabled">
            <summary>
            You have disabled downloading
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Blocked">
            <summary>
            Downloading is enabled and the queue is non-empty, but environmental
            conditions (power/network/disk) prevent download.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Errors">
            <summary>
            Errors occurred while downloading. There are pending downloads, but CNC
            cannot proceed without manual intervention (e.g. calling reset).
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_AuthenticationFailure">
            <summary>
            Could not authenticate Group/User/Device against the Backplane.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_AuthenticationExpired">
            <summary>
            The Backplane has not been able to be contacted for longer than the "maximum offline" time period.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoClientStatus.kVC_Unlicensed">
            <summary>
            The SDK has not yet received a valid License from the backplane.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.RemoteWipeCompleteEventHandler">
            <summary>
            Fired after CNC receives a remote-wipe command from Backplane and has performed the wipe.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <remarks>When CNC receives a remote wipe command, it will delete all VirtuosoFile and VirtuosoFileGroup
            objects, de-register the device from the Backplane, and reset CNC to its virgin state,
            with no stored User or Group credentials.  You'll need to call startup again before you can
            perform any CNC function.</remarks>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.BackplanePermissionEventHandler">
            <summary>
            Delegate BackplanePermissionEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoClientStatusChangeEventHandler">
            <summary>
            Fired when CNC's download engine changes status.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Penthera.VirtuosoClient.Public.Events.StatusChangeEventArgs"/> instance containing the event data.</param>
            <remarks>This event is not fired when downloads are happening in the background.
            Don't use this message as the only mechanism to track CNC status. Be sure to
            check the current CNC status via the appropriate property when the app is foregrounded.</remarks>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoClientAuthenticationUpdatedHandler">
            <summary>
            Delegate CNCClientAuthenticationUpdatedHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Penthera.VirtuosoClient.Public.Events.AuthenticationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoCcbDeviceSavedEventHandler">
            <summary>
            Fired when Backplane acknowledges saving device data
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="!:CNCDeviceSavedEventArgs"/> instance containing the event data.</param>
            <remarks>If the save request was successful, then the new value has been applied and the event argument's
            success parameters will be true.  If the change could not be made or if the Backplane rejected
            the change, then the device will be reverted to its original state, the success parameter will
            be false, and the error string will indicate the reason for the failure.</remarks>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.AssetSizeValidationWarningEventHandler">
            <summary>
            Fired when validation on file size is disabled and the engine detects a file size mismatch.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Penthera.VirtuosoClient.Public.Events.AssetSizeValidationWarningEventArgs"/> instance containing the event data.</param>
            <remarks>When validation of file size is disabled CNC will issue a warning about the mismatch. The warning
            occurs in the following circumstance.
            1) CNC detects a difference between the ExpectedSize of an IAsset and the total number
            of bytes to be downloaded.
            2) Download of an IAsset completes and its final file size does not match the ExpectedSize</remarks>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.LicenseChangedEventHandler">
            <summary>
            Delegate LicenseChangedEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IVirtuosoClient">
            <summary>
            The central control for all download-related activities.
            </summary>
            <remarks>A singleton object that handles all download activity and monitoring conditions and settings.
            Maintains the download queue, which is a list of VirtuosoAsset objects enqueued for download.
            Receives config values from the Backplane. Monitors device state. Ensures that downloads
            only occur consistent with the current configuration.
            <note type="warning">
            You must never instantiate an object of this type directly.
            The VirtuosoDownloadEngine is a singleton and should only be accessed via the
            provided instance method.
            </note></remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Backplane">
            <summary>
            Gets the backplane.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.VirtuosoTime">
            <summary>
            Gets the CNC time.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.TrustVirtuosoTime">
            <summary>
            Gets a value indicating whether [trust CNC time].
            </summary>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.BackplanePermissionReceived">
            <summary>
            Occurs when [backplane permission received].
            </summary>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.RemoteWipeComplete">
            <summary>
            Fired after Virtusoo receives a remote-wipe command from Backplane and has performed the wipe.
            </summary>
            <remarks>When CNC receives a remote wipe command, it will delete all VirtuosoFile and VirtuosoFileGroup
            objects, de-register the device from the Backplane, and reset CNC to its virgin state,
            with no stored User or Group credentials.  You'll need to call startup again before you can
            perform any CNC function.</remarks>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.VirtuosoClientStatusChange">
            <summary>
            Fired when CNC's download engine changes status.
            </summary>
            <remarks>This event is not fired when downloads are happening in the background.
            Don't use this message as the only mechanism to track CNC status. Be sure to
            check the current CNC status via the appropriate property when the app is foregrounded.</remarks>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.VirtuosoCcbDeviceSaved">
            <summary>
            Fired when Backplane acknowledges saving device data
            </summary>
            <remarks>If the save request was successful, then the new value has been applied and the event argument's
            success parameters will be true.  If the change could not be made or if the Backplane rejected
            the change, then the device will be reverted to its original state, the success parameter will
            be false, and the error string will indicate the reason for the failure.</remarks>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.AssetSizeValidationWarning">
            <summary>
            Fired when validation on file size is disabled and the engine detects a file size mismatch.
            </summary>
            <remarks>When validation of file size is diabled CNC will issue a warning about the mismatch. The warning
            occurs in the following circumstance.
            1) CNC detects a difference between the ExpectedSize of an IAsset and the total number
            of bytes to be downloaded.
            2) Download of an IAsset completes and its final file size does not match the ExpectedSize</remarks>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.AuthenticationUpdated">
            <summary>
            Occurs when [authentication updated].
            </summary>
        </member>
        <member name="E:Penthera.VirtuosoClient.Public.IVirtuosoClient.LicenseChanged">
            <summary>
            Occurs when [license changed].
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Version">
            <summary>
            Gets SDK version.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.TestValue">
            <summary>
            Gets or sets the test value.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.ThisDevice">
            <summary>
            A device object representing this device.  It can be used to observe device-related settings and to
            request changes to the device nickname and download-enabled permissions.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Settings">
            <summary>
            Access to the VirtuosoSettings object, which encapsulates all system defaults
            and operator changeable values.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.VirtuosoLogger">
            <summary>
            Access to the VirtuosoLogger object, which can be used as a basic system logger.
            The enclosing application is also required to use the VirtuosoLogger to record system
            events that are not detectable by the SDK, such as when asset playback starts and
            finishes.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Status">
            <summary>
            The current CNC download Engine status
            </summary>
            <seealso cref="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.GetStatusAsync" />
            <remarks>This property is synchronous and returns the most recent calculated client status,
            which may be slightly outdated.  To get the current status, use the async method
            to retrieve the status.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.GetStatusAsync">
            <summary>
            The current CNC download Engine status
            </summary>
            <returns>The current CNC download Engine status</returns>
            <seealso cref="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Status" />
            <remarks>This method returns the most up-to-date client status, but since system state
            is determined by several internal variables, calling this method may take some
            time.  During normal activity, the status will automatically be updated by the
            SDK, and the Status property will provide direct access to the calculated value.</remarks>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.License">
            <summary>
            Gets the license.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.DiskStatusOK">
            <summary>
            Whether disk usage state permits downloading
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.DiskStatusOKAsync">
            <summary>
            Whether disk usage state permits downloading
            </summary>
            <returns>Whether CNC disk usage rules permit additional downloading</returns>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.DiskFreeSpace">
            <summary>
            The amount of space remaining on disk, in bytes
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.SDKUsedSpace">
            <summary>
            The amount of disk space used by the SDK, in bytes
            </summary>
            <value>The SDK used space.</value>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.PermittedSpaceRemaining">
            <summary>
            The amount of disk space that may still be used for downloads, in bytes
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.NetworkStatusOK">
            <summary>
            Whether current network state permits downloading
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.StartupAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            You must call this method to initialize CNC before you call any other CNC method.
            </summary>
            <param name="backplaneUrl">A root URL pointing to the location of the Backplane endpoints</param>
            <param name="userId">The Backplane user to use</param>
            <param name="externalDeviceId">An optional externally-defined device UUID</param>
            <param name="secret">The Penthera-provided application secret</param>
            <param name="key">The Penthera-provided application key</param>
            <returns>An awaitable Task that finishes when startup is complete</returns>
            <remarks>Sets up CNC for use with a Backplane instance.
            <para>
            NOTE: Except as otherwise documented, if you attempt to call other methods before
            this one, you'll get an exception. If you catch and ignore the exceptions,
            CNC behavior will be undefined.
            </para></remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.SyncWithBackplaneAsync">
            <summary>
            Forces a manual sync with the Backplane
            </summary>
            <returns>Whether the sync was successful</returns>
            <remarks>CNC will automatically sync with the Backplane every time the app is foregrounded,
            and potentially at other times.  This method can be used to increase the sync frequency.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.UnregisterThisDevice">
            <summary>
            Unregisters this device from the backplane.  Upon successful completion, the client must
            revert to the original app install state.  Typically this is a login page.  CNC will
            not function until the StartupAsync method is called again.
            </summary>
            <returns>Whether the unregister was successful</returns>
            <seealso cref="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.StartupAsync(System.String,System.String,System.String,System.String,System.String)" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.NewAsset(System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64},Penthera.VirtuosoClient.Public.EAssetType)">
            <summary>
            Creates a new in-memory Asset.  To be recognized and persisted by the SDK, the Asset must be enqueued first.
            </summary>
            <param name="assetId">(Required) A unique identifier for the asset. Used in all log events.</param>
            <param name="description">(Required) A description of the asset.  CNC only uses this in log output.</param>
            <param name="fileUrl">(Required) The remote URL for the file (where to download from).</param>
            <param name="expectedMD5">(Optional) CNC will validate the observed md5 of the downloaded file against
            this expected hash value.  In case of mismatch, CNC will issue a warning and
            retry the download. Nil means don't validate.</param>
            <param name="permittedMIMETypes">(Required) An array of NSString mime type values.  CNC will validate
            that the observed mime type is contained in this list, or it will issue an
            error and cancel the download. An empty list means "do not validate mime type."</param>
            <param name="metadata">(Optional) A convenience field allowing you to associate arbitrary data with an asset.
            CNC will serialize this data and store it, but not explicitly use this data.</param>
            <param name="publishDate">(Optional) CNC will not provide API access to the asset until this date. Null means "now."</param>
            <param name="expiryDate">(Optional) CNC will not provide API access to the asset after this date. Null means no expiry.</param>
            <param name="expiryAfterPlay">(Optional) Amount of time after the asset is first played that CNC will delete the asset.
            In seconds. Less than or equal to 0.0 means no expiry.</param>
            <param name="expiryAfterDownload">(Optional) Amount of time after CNC completes download of file that CNC will delete
            the file. In seconds. Less than or equal to 0.0 means no expiry.</param>
            <param name="assetType">THe type of asset.</param>
            <returns>A new Asset object, initialized with the provided values</returns>
            <seealso cref="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.EnqueueFileAsync(Penthera.VirtuosoClient.Public.IAsset)" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.EnqueueFileAsync(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Adds an asset to the download queue.
            </summary>
            <param name="asset">The asset to add to the end of the download queue</param>
            <returns>Whether the Asset was successfully added to the queue</returns>
            <remarks>In general, CNC downloads assets in the order they were added to the queue.
            If CNC encounters an error while downloading an asset, it may put that asset aside and
            proceed to the next one in the queue. You should not make any assumptions about the
            number of assets CNC may download in parallel or the order in which they will download.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.RemoveFromQueue(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Remove the given asset from the download queue.
            </summary>
            <param name="asset">The asset to remove from the download queue</param>
            <returns>Whether the Asset was successfully removed from the queue</returns>
            <remarks>This method also deletes any temporary files on disk</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.ShowQueue">
            <summary>
            Provides access to a collection of Assets that have not finished downloading
            </summary>
            <returns>Assets that have not finished downloading</returns>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Queue">
            <summary>
            All Assets in the system
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoClient.Downloaded">
            <summary>
            Assets that have finished downloading
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.GetAsset(System.Guid)">
            <summary>
            Retrieves an asset in the download queue by UUID.
            </summary>
            <param name="uuid">The universally unique identifier (UUID) of the asset</param>
            <returns>The Asset object on success or null on failure.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.DeleteAssetAsync(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Deletes an asset
            </summary>
            <param name="asset">The asset to delete</param>
            <returns>Whether the Asset was successfully deleted</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.DeleteAll">
            <summary>
            Deletes all assets on the device.
            </summary>
            <returns>An awaitable task which completes when the delete is complete</returns>
            <remarks>This method also deletes the entire download directory from disk.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.FlushQueueAsync">
            <summary>
            Removes all items from the download queue.
            </summary>
            <returns>An awaitable task which completes when the flush is complete</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.UserDeviceList">
            <summary>
            List of user devices
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.UpdateDeviceDetail(Penthera.VirtuosoClient.Public.IDevice)">
            <summary>
            update user device details
            </summary>
            <param name="DeviceDetail">The device detail.</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoClient.DeviceUnRegister(Penthera.VirtuosoClient.Public.IDevice)">
            <summary>
            Unregister user
            </summary>
            <param name="DeviceDetail">The device detail.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel">
            <summary>
            Configures the amount of output that is returned in the DebugLogText string
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel.Verbose">
            <summary>
            Returns all output, including internal debug output.
            Should only be used during development.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel.Debug">
            <summary>
            Returns detailed logging output, suitable for analysis
            of production behavior
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel.Warning">
            <summary>
            Returns only warnings and errors
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel.Error">
            <summary>
            Returns only critical errors
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel.None">
            <summary>
            Disables all debug string output
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IVirtuosoLogger">
            <summary>
            The central interface responsible for managing all CNC logging.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoLogger.LoggingLevel">
            <summary>
            The active logging level.  This value determines the amount of output supplied by the DebugLogText method.
            </summary>
            <value>The logging level.</value>
            <seealso cref="!:DebugLogText" />
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoLogger.NetworkLoggingEnabled">
            <summary>
            Whether network-based logging is enabled.  In order to reduce performance overhead during development and debugging,
            you may choose to disable all other forms of logging and rely on the network-based logger.  If enabled, Cache and Carry
            will utilize a low priority thread pool to connect to a remote logger instance and send all log data to the remote over
            a client socket.
            </summary>
            <value>Whether network logging is enabled.</value>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoLogger.NetworkLoggingIP">
            <summary>
            The IP address the network-based logger should connect to. 
            </summary>
            <value>The IP address of a networked computer system running the DebugServer tool.</value>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoLogger.NetworkLoggingPort">
            <summary>
            The network port the network-bsaed logger should connect to.
            </summary>
            <value>The network port of a networked computer system running the DebugServer tool.</value>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.GetFilesAsync">
            <summary>
            Access to the ongoing CNC log files
            </summary>
            <returns>A list of log files</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.LogPlayStart(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Logs "play" event for an asset
            </summary>
            <param name="asset">The played Asset</param>
            <remarks>CNC cannot automatically detect a 'play' event, since this occurs at the app
            level, "above" Virtuoso. This method allows you to log the event.
            Note that a "pause" event is equivalent to a stop event followed by a start event.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.LogPlayStop(Penthera.VirtuosoClient.Public.IAsset,System.UInt64)">
            <summary>
            Logs "stop-play" event for an asset
            </summary>
            <param name="asset">The stopped Asset</param>
            <param name="elapsedSeconds">The number of seconds the asset was played before it was stopped or paused
            (e.g. wall time since 'start' was reported)</param>
            <remarks>CNC cannot automatically detect a 'stop play' event, since this occurs at the app
            level, "above" Virtuoso. This method allows you to log the event.
            Note that a "pause" event is equivalent to a stop event followed by a start event.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.WriteLine(Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel,System.String)">
            <summary>
            Logs a message to the CNC log.  May be used to log application-level details to the stored logs.
            </summary>
            <param name="logLevel">The reporting level this message should be displayed at</param>
            <param name="message">The message to log</param>
            <remarks>CNC will automatically add timestamps and line returns to the log output.  The values you supply
            to this method should not include them.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoLogger.WriteLine(Penthera.VirtuosoClient.Public.VirtuosoLoggingLevel,System.String,System.Object[])">
            <summary>
            Logs a message to the CNC log.  May be used to log application-level details to the stored logs.
            </summary>
            <param name="logLevel">The reporting level this message should be displayed at</param>
            <param name="format">The message to log, in basic string format notation.  You can
            supply any number of replacement arguments by using {#} notation.  Detailed formatting is not supported.</param>
            <param name="args">Replacement arguments</param>
            <remarks>CNC will automatically add timestamps and line returns to the log output.  The values you supply
            to this method should not include them.</remarks>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IVirtuosoSettings">
            <summary>
            Access to user-configurable CNC settings
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.MaxStorage">
            <summary>
            The amount of disk space permitted to be used by SDK downloads, in MB (Default: 10 TB)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.Headroom">
            <summary>
            The amount of disk space to leave available, in MB (Default: 300 MB)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.DownloadOverCell">
            <summary>
            Whether or not to allow download over cellular connections (Default: false)
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.ValidateFileSizes">
            <summary>
            Whether or not to validate that the final file size matches the expected file size when download finishes (Default: false)
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSettings.ResetValidatesFileSizesToDefault">
            <summary>
            Resets the ValidatesFileSizes setting to the internal default value.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSettings.ResetMaxStorageToDefault">
            <summary>
            Resets the MaxStorage setting to the internal default value.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSettings.ResetHeadroomToDefault">
            <summary>
            Resets the Headroom setting to the internal default value.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSettings.ResetDownloadOverCellToDefault">
            <summary>
            Resets the DownloadOverCell setting to the internal default value.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.MaxPermittedSegmentErrors">
            <summary>
            max segment error
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.IVirtuosoSettings.SegmentErrorHTTPCode">
            <summary>
            HTTP Code to use on erred segments during playback (e.g. HTTP Code 200)
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSettings.Save">
            <summary>
            Save Settings
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.IVirtuosoSubscriber">
            <summary>
            The central control for all download-related activities.
            </summary>
            <remarks>
            A singleton object that handles all download activity and monitoring conditions and settings.
            Maintains the download queue, which is a list of VirtuosoAsset objects enqueued for download. 
            Receives config values from the Backplane. Monitors device state. Ensures that downloads 
            only occur consistent with the current configuration.
            <note type="warning">
            You must never instantiate an object of this type directly.
            The VirtuosoDownloadEngine is a singleton and should only be accessed via the
            provided instance method.
            </note>
            </remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.IVirtuosoSubscriber.StartWithBackplaneAsyncPermissionCheck(System.String)">
            <summary>
            You must call this method to initialize CNC before you call any other CNC method.
            </summary>
            <remarks>
            Sets up CNC for use with a Backplane instance.
            <para>
            NOTE: Except as otherwise documented, if you attempt to call other methods before
            this one, you'll get an exception. If you catch and ignore the exceptions, 
            CNC behavior will be undefined.
            </para>
            </remarks>
            <param name="backplaneUrl">A root URL pointing to the location of the Backplane endpoints</param>
            <param name="userId">The Backplane user to use</param>
            <param name="externalDeviceId">An optional externally-defined device UUID</param>
            <param name="secret">The Penthera-provided application secret</param>
            <param name="key">The Penthera-provided application key</param>
            <returns>An awaitable Task that finishes when startup is complete</returns>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.DeviceInfo">
            <summary> Information about the device. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.SystemFamily">
            <summary>
            Gets the system family.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.SystemVersion">
            <summary>
            Gets the system version.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.SystemArchitecture">
            <summary>
            Gets the system architecture.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.ApplicationVersion">
            <summary>
            Gets the application version.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.DeviceManufacturer">
            <summary>
            Gets the device manufacturer.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.DeviceModel">
            <summary>
            Gets the device model.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.DeviceId">
            <summary>
            Gets the device identifier.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.DeviceFirmware">
            <summary>
            Gets the device firmware.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.DeviceOS">
            <summary>
            Gets the device os.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.DeviceInfo.InstallDate">
            <summary>
            Gets the installation date.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.DeviceInfo.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Penthera.VirtuosoClient.Public.DeviceInfo"/> class.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.VirtuosoClientFactory">
            <summary>
            Provides static access to the IVirtuosoClient instance.
            </summary>
            <remarks>In Windows 8, interfaces are not capable of having static methods.  The VirtuosoClientFactory class
            is a convenience accessor that gives direct static access to the IVirtuosoClient singleton.</remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.VirtuosoClientFactory.ClientInstance">
            <summary>
            Returns the IVirtuosoClient singleton
            </summary>
            <returns>The IVirtuosoClient singleton instance</returns>
            <remarks><note type="warning">You should never store the IVirtuosoClient instance for any length of time in your
            own code.  Internal system events, such as a remote wipe, may invalidate the IVirtuosoClient, and future
            calls to this method will then return a different instance.  If you store a local copy, undefined behavior
            may result.</note></remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.VirtuosoClientFactory.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Penthera.VirtuosoClient.Public.VirtuosoClientFactory"/> class from being created.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType">
            <summary> Values that represent backplane request types. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Register">
            <summary> An enum constant representing the register option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Deregister">
            <summary> An enum constant representing the deregister option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Sync">
            <summary> An enum constant representing the Synchronise option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.LogEvents">
            <summary> An enum constant representing the log events option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.DeregisterOwnedDevice">
            <summary> An enum constant representing the deregister owned device option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.DeviceManagement">
            <summary> An enum constant representing the device management option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.RegisterPush">
            <summary> An enum constant representing the register push option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.UnregisterPush">
            <summary> An enum constant representing the unregister push option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.DownloadPermission">
            <summary> An enum constant representing the download permission option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Subscriptions">
            <summary> An enum constant representing the subscriptions option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Subscribe">
            <summary> An enum constant representing the subscribe option. </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Public.Events.EBackplaneRequestType.Unsubscribe">
            <summary> An enum constant representing the unsubscribe option. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.IBackplaneRequestCompleteArgs">
            <summary>
            Represents a backplane response
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.IBackplaneRequestCompleteArgs.RequestCompleted">
            <summary>
            Gets the request completed.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.IBackplaneRequestCompleteArgs.ResponseStatusCode">
            <summary>
            Gets the response status code.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.IBackplaneRequestCompleteArgs.BackplaneResponseCode">
            <summary>
            Gets the backplane response code.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.IBackplaneRequestCompleteArgs.ResponseMessage">
            <summary>
            Gets the response message.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs">
            <summary> Additional information for backplane permission events. </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs.#ctor(Penthera.VirtuosoClient.Public.IAsset,Penthera.VirtuosoClient.Public.IBackplanePermission)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs"/> class.
            </summary>
            <param name="a">The asset</param>
            <param name="Perm">The permition</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs.BackplanePermission">
            <summary>
            Gets the backplane permission.
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.BackplanePermissionEventArgs.Asset">
            <summary>
            Gets the asset.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs">
            <summary> Additional information for license events. </summary>
            <seealso cref="T:System.EventArgs" />
            <seealso cref="T:Penthera.VirtuosoClient.Public.License.ILicenseState" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs.#ctor(Penthera.VirtuosoClient.Public.License.ELIcenseEvent,Penthera.VirtuosoClient.Public.License.ELicenseState)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs"/> class.
            </summary>
            <param name="aEvent">The event.</param>
            <param name="aState">The state.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs.Reason">
            <summary> Gets the state of the license event. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.LicenseEventArgs.LicenseState">
            <summary> Gets the state of the license. </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.StatusChangeEventArgs">
            <summary>
            Provides details on the current IVirtuosoClient status.  Sent with a status change event.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.StatusChangeEventArgs.#ctor(Penthera.VirtuosoClient.Public.VirtuosoClientStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.StatusChangeEventArgs"/> class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.StatusChangeEventArgs.Status">
            <summary>
            The current IVirtuosoClient status
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.BackplaneRequestArgs">
            <summary> Arguments for backplane request. </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.BackplaneRequestArgs.BackplaneRequestType">
            <summary>
            Gets the type of the backplane request.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.AuthenticationEventArgs">
            <summary> Additional information for authentication events. </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.AuthenticationEventArgs.#ctor(Penthera.VirtuosoClient.Public.AuthenticationStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.AuthenticationEventArgs"/> class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.AuthenticationEventArgs.Status">
            <summary>
            The current IVirtuosoClient status
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.VirtuosoDeviceSavedEventArgs">
            <summary>
            Provides the result of a VirtuosoDevice update request.  Sent when the request has either
            successfully completed or an error was encountered.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.VirtuosoDeviceSavedEventArgs.Success">
            <summary>
            Whether the request succeeded
            </summary>
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.VirtuosoDeviceSavedEventArgs.ErrorString">
            <summary>
            If Success is false, then an error string indicating what went wrong.  If the request was
            successful, then empty.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.VirtuosoDeviceSavedEventArgs.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.VirtuosoDeviceSavedEventArgs"/> class.
            </summary>
            <param name="success">if set to <c>true</c> [success].</param>
            <param name="errorString">The error string.</param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Public.Events.AssetSizeValidationWarningEventArgs">
            <summary> Additional information for asset size validation warning events. </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Penthera.VirtuosoClient.Public.Events.AssetSizeValidationWarningEventArgs.Asset">
            <summary> Gets the asset. </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.Public.Events.AssetSizeValidationWarningEventArgs.#ctor(Penthera.VirtuosoClient.Models.Asset)">
            <summary>
            Initializes a new instance of the <see cref="T:Penthera.VirtuosoClient.Public.Events.AssetSizeValidationWarningEventArgs"/> class.
            </summary>
            <param name="asset">The asset.</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.BackplaneEvent.GetProviders">
            <summary>
            A string detailing the ISP or the carrier for cellular connections. 
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:Penthera.VirtuosoClient.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly
            when marked with <see cref="T:Penthera.VirtuosoClient.Annotations.MeansImplicitUseAttribute"/>
            or <see cref="T:Penthera.VirtuosoClient.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:Penthera.VirtuosoClient.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder
            within a web project. Path can be relative or absolute,
            starting from web root (~)
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC controller. If applied to a method,
            the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that
            the parameter is an MVC partial view. If applied to a method,
            the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections
            for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:Penthera.VirtuosoClient.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:Penthera.VirtuosoClient.VirtuosoSubscriber">
            <summary>
            Class VirtuosoSubscriber. This class cannot be inherited.
            </summary>
            <seealso cref="!:Penthera.VirtuosoClient.Models.Singleton&lt;Penthera.VirtuosoClient.VirtuosoClient&gt;" />
            <seealso cref="T:Penthera.VirtuosoClient.Public.IVirtuosoSubscriber" />
        </member>
        <member name="E:Penthera.VirtuosoClient.VirtuosoSubscriber.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoSubscriber.StartWithBackplaneAsyncPermissionCheck(System.String)">
            <summary>
            You must call this method to initialize CNC before you call any other CNC method.
            </summary>
            <param name="assets">The assets.</param>
            <returns>An awaitable Task that finishes when startup is complete</returns>
            <remarks>Sets up CNC for use with a Backplane instance.
            <para>
            NOTE: Except as otherwise documented, if you attempt to call other methods before
            this one, you'll get an exception. If you catch and ignore the exceptions,
            CNC behavior will be undefined.
            </para></remarks>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.Enqueue(Penthera.VirtuosoClient.Models.Asset)">
            <summary>
            Adds an asset to the queue.
            </summary>
            <param name="asset">Asset to add to the queue.</param>
            <returns>True if the insert was successful. False, otherwise.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.Remove(System.String)">
            <summary>
            Removes an asset from the Queue.
            </summary>
            <param name="assetId">Asset ID to remove.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.Remove(System.Guid)">
            <summary>
            Removes an asset from the Queue.
            </summary>
            <param name="uuid">Asset UUID to remove.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.GetNext(System.Nullable{System.Guid})">
            <summary>
            Gets the next asset from the queue that is ready for download.
            </summary>
            <returns><see cref="T:Penthera.VirtuosoClient.Models.Asset"/></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.InQueue(System.String)">
            <summary>
            Returns true if the Asset indicated by the given uuid is in the queue
            </summary>
            <param name="uuid">A uuid string representing an asset</param>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.QueueManager.PersistAsync">
            <summary>
            Persists the queue to disk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Security.Crypto.Base64Encode(System.String)">
            <summary>
            Encode value in base64 string
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Security.HmacSha256.ComputeHash(System.String)">
            <summary>C:\Users\nzanatta\Source\Dev(inProcess)\Win-VirtuosoClientSDK\SDK\VirtuosoSDK\Security\HmacSha256.cs
            Calculates a HMACSHA256 hash.
            Necessary because WP8 currently only has native functions for this in Silverlight based apps.
            </summary>
            <param name="value">The UTF-8 encoded value to hash.</param>
            <returns>Base 64 encoded HMACSHA256 hashed value.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Utilities.Extensions.Base64Decode(System.String)">
            <summary>
             decode value from base64 to string
            </summary>
            <param name="base64EncodedData"></param>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.Utilities.Extensions.Base64Encode(System.String)">
            <summary>
            Encode value in base64 string
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="P:Penthera.VirtuosoClient.VirtuosoClient.Status">
            <summary>
            Immediately returns the last available VirtuosoClient status value.  Because system conditions can change
            asynchronously, this may not be the current state.  Use the GetStatusAsync() method to get the most recent
            status if you need it.
            </summary>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.GetStatusAsync">
            <summary>
            Returns the most up-to-date VirtuosoClient status and notifies the event listener of changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.StartupAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes the Virtuoso client and registers the app with the Penthera Backplane.
            </summary>
            <param name="backplaneUrl">A URL to a Penthera Backplane instance</param>
            <param name="userId">Customer provided user ID.</param>
            <param name="externalDeviceId">Customer provided</param>
            <param name="secret">Penthera-provided application secret</param>
            <param name="key">Penthera-provided application key</param>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.EnqueueFileAsync(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Enqueue a “singleton” file for download (i.e. not part of a group). 
            Caller must pass in assetID, which is also expected in other methods, below.
            </summary>
            <param name="assetId">Customer-provided GUID for asset</param>
            <param name="urlToFile">URL of file to download</param>
            <param name="mimeTypes">For validation (ignored if null)</param>
            <param name="md5">For validating (ignored if null)</param>
            <param name="expectedSize">For validation (ignored if null)</param>
            <returns>Returns true if item was enqueued, false if permissions don’t allow enqueuing.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.ShowQueue">
            <summary>
            Gets a list of the currently queued items.
            </summary>
            <returns>A collection of assetIds representing the queued objects.</returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.RemoveFromQueue(Penthera.VirtuosoClient.Public.IAsset)">
            <summary>
            Remove the object from the queue. Returns true if the object was found in the queue and removed.
            </summary>
            <param name="asset"></param>
            <returns></returns>
        </member>
        <member name="M:Penthera.VirtuosoClient.VirtuosoClient.FlushQueueAsync">
            <summary>
            Remove all items from the queue.
            </summary>
        </member>
    </members>
</doc>

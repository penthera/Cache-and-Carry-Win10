<Page
    x:Name="pageRoot"
    x:Class="VirtuosoClient.TestHarness.HubPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VirtuosoClient.TestHarness"
    xmlns:common="using:VirtuosoClient.TestHarness.Common"
    xmlns:data="using:VirtuosoClient.TestHarness.Data"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">


    <Page.Resources>

        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <ImageBrush x:Key="HubBackgroundImageBrush" ImageSource="Assets/HubBackground.png"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <ImageBrush x:Key="HubBackgroundImageBrush" ImageSource="{x:Null}"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        <!--MenuFlyout x:Key="contextMenu">
            <MenuFlyoutItem Text="Play Video" Click="PlayAsset_Click" />
            <MenuFlyoutItem Text="Asset Statistics" Click="ViewAssetInfo_Click" />
        </MenuFlyout-->
            <common:DiskStorageFormatter x:Key="DiskStorageFormatter"/>
            <common:VirtuosoClientEnvironmentStatusFormatter x:Key="VirtuosoClientEnvironmentStatusFormatter"/>
            <common:VirtuosoClientEnabledFormatter x:Key="VirtuosoClientEnabledFormatter"/>
            <common:VirtuosoClientStatusFormatter x:Key="VirtuosoClientStatusFormatter"/>
            <common:AssetErrorFormatter x:Key="AssetErrorFormatter"/>
            <common:UnlimitedFormatter x:Key="UnlimitedFormatter"/>
            <common:ExpiryFormatter x:Key="ExpiryFormatter"/>
            <common:AssetPercentFormatter x:Key="AssetPercentFormatter"/>

            <DataTemplate x:Key="QueueListTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding AssetId}"/>
                    <ProgressBar Value="{Binding FractionComplete}" Minimum="0" Maximum="1" Width="100"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="StandardTestListTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding Metadata}"/>
                    <TextBlock Text="{Binding Status}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Duration: "/>
                        <TextBlock Text="{Binding Duration}"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="StandardExpiredListTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding Metadata}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Expired on: "/>
                        <TextBlock Text="{Binding EffectiveExpiryDate, Converter={StaticResource ExpiryFormatter}}" HorizontalAlignment="Right" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>



            <DataTemplate x:Key="QueuedAssetTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding Metadata}"/>
                    <TextBlock Text="{Binding AssetId}" Margin="0,0,0,7" Foreground="{ThemeResource ListViewItemOverlaySecondaryForegroundThemeBrush}"/>
                    <ProgressBar Value="{Binding FractionComplete, Mode=TwoWay}" Minimum="0" Maximum="1" Width="300"/>
                    <TextBlock Text="{Binding FractionComplete, Converter={StaticResource AssetPercentFormatter}}" />
                    <TextBlock Text="{Binding Status}"/>
                    <TextBlock Text="{Binding DownloadRetryCount,Converter={StaticResource AssetErrorFormatter}}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Last Error: "/>
                        <TextBlock Text="{Binding DownloadError}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Duration: "/>
                        <TextBlock Text="{Binding Duration}"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="TestListWithAssetsTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding Metadata}"/>
                    <TextBlock Text="{Binding AssetId}" Margin="0,0,0,7" Foreground="{ThemeResource ListViewItemOverlaySecondaryForegroundThemeBrush}"/>
                    <ProgressBar Value="{Binding FractionComplete}" Minimum="0" Maximum="1" Width="100"/>
                    <ListView ItemsSource="{Binding Assets}" 
                              SelectionMode="None" 
                              ItemClick="ListViewBase_OnItemClick"
                              ContextCanceled="ListView_ContextCanceled"
                              ContextRequested="ListView_ContextRequested"
                              IsItemClickEnabled="False">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="10,0,0,5">
                                    <TextBlock Text="{Binding AssetId}" Margin="0,0,0,7" Foreground="{ThemeResource ListViewItemOverlaySecondaryForegroundThemeBrush}"/>
                                    <ProgressBar Value="{Binding FractionComplete}" Minimum="0" Maximum="1" Width="100"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="SectionedTestListTemplate">
                <StackPanel Margin="0,0,0,19">
                    <TextBlock Text="{Binding Title}" FontWeight="Bold" Foreground="{ThemeResource ListViewItemOverlaySecondaryForegroundThemeBrush}" />
                    <ListView ItemsSource="{Binding Tests}" 
                              SelectionMode="None" 

                              ItemClick="ListViewBase_OnItemClick"
                              IsItemClickEnabled="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="10,0,0,5">
                                    <TextBlock Text="{Binding Title}" Margin="0,0,0,7"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>
    <!--
    This grid acts as a root panel for the page.
  -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageTitle.Style" Value="{StaticResource TitleTextBlockStyle}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageTitle.Style" Value="{StaticResource HeaderTextBlockStyle}" />
                        <Setter Target="pageTitle.HorizontalAlignment" Value="Stretch" />
                        <Setter Target="Commandbar.Margin"  Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Hub>
            <Hub.Header>
                <Grid Width="{Binding ActualWidth, ElementName=pageRoot}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Button Grid.Column="0" x:Name="backButton" Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top" HorizontalAlignment="Stretch"
                        Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>-->
                    <TextBlock x:Name="pageTitle" x:Uid="HubPage" Text="Virtuoso Test Harness" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="0" 
                        VerticalAlignment="Center" HorizontalAlignment="Stretch" IsHitTestVisible="false" TextWrapping="NoWrap" TextAlignment="Center"/>
                </Grid>

            </Hub.Header>
            <!--<Hub.Header>
                -->
            <!-- Back button and page title -->
            <!--
                
                <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button  x:Name="backButton" Style="{StaticResource NavigationBackButtonNormalStyle}"
                        Margin="0,0,39,0" 
                        VerticalAlignment="Top"
                        Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
                        <TextBlock x:Name="pageTitle" x:Uid="Header" Text="virtuoso test harness" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        VerticalAlignment="Top" IsHitTestVisible="false" TextWrapping="NoWrap" />
                    </Grid>
            
            </Hub.Header>-->

            <HubSection x:Uid="QUEUEDSection" Header="QUEUED" HorizontalAlignment="Center"  MinWidth="360">
                <DataTemplate>
                    <ListView 
                        AutomationProperties.AutomationId="ItemListViewSection2"
                        AutomationProperties.Name="Items In Group"
                        SelectionMode="None"
                        IsItemClickEnabled="True"
                        ItemsSource="{Binding PendingTests}"
                        ItemTemplate="{StaticResource QueuedAssetTemplate}"
                        ItemClick="ItemView_ItemClick">
                    </ListView>
                </DataTemplate>
            </HubSection>
            <HubSection x:Uid="DOWNLOADEDSection" Header="DOWNLOADED" HorizontalContentAlignment="Center"  MinWidth="350">
                <DataTemplate>
                    <ListView 
                        AutomationProperties.AutomationId="ItemListViewSection3"
                        AutomationProperties.Name="Items In Group"
                        SelectionMode="None"
                        IsItemClickEnabled="True"
                        ItemsSource="{Binding CompletedTests}"
                        ItemTemplate="{StaticResource StandardTestListTemplate}"
                        ItemClick="ItemView_ItemClick">
                    </ListView>
                </DataTemplate>
            </HubSection>
            <HubSection x:Uid="ExpiredSection" Header="EXPIRED" HorizontalContentAlignment="Center"  MinWidth="350">
                <DataTemplate>
                    <ListView 
                        AutomationProperties.AutomationId="ItemListViewSection4"
                        AutomationProperties.Name="Items In Group"
                        SelectionMode="None"
                        IsItemClickEnabled="True"
                        ItemsSource="{Binding ExpiredTests}"
                        ItemTemplate="{StaticResource StandardExpiredListTemplate}"
                        ItemClick="ItemView_ItemClick">
                    </ListView>
                </DataTemplate>
            </HubSection>
            <HubSection x:Uid="AvailableTestsHeader" Header="AVAILABLE TESTS" HorizontalContentAlignment="Center"  MinWidth="300">
                <DataTemplate>
                    <ListView 
                        AutomationProperties.AutomationId="ItemListViewSection5"
                        AutomationProperties.Name="Items In Group"
                        SelectionMode="None"
                        ItemsSource="{Binding Sections}"     
                        ItemTemplate="{StaticResource SectionedTestListTemplate}"/>
                </DataTemplate>
            </HubSection>

        </Hub>
        <CommandBar Grid.Row="2" VerticalAlignment="Bottom"   ClosedDisplayMode="Minimal">

            <AppBarButton x:Name="ClearQueue" Icon="Clear" Label="ClearQueue" Click="ClearQueue_Click"/>
            <AppBarButton x:Name="SettingButton" Icon="Setting" Label="Settings" Click="SettingButton_Click"/>
            <AppBarButton x:Name="DeviceButton" Icon="CellPhone" Label="Devices" Click="DeviceButton_Click" />
            <AppBarButton x:Name="EventButton" Icon="Calendar" Label="Events" Click="EventButton_Click" />
            <AppBarButton x:Name="LogoutButton"  Label="Logout" Click="LogoutButton_Click"/>
            <AppBarButton x:Name="GetChannelUri"  Label="Display Uri" Click="GetChannelUriButton_Click"/>
            <AppBarSeparator/>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Name="ForceSync" Icon="Refresh" Label="Sync" Click="ForceSync_Click"/>
                <AppBarButton x:Name="DeleteSync" Icon="Refresh" Label="Delete All" Click="Public_Delete_All"/>
                <AppBarButton x:Name="OutputLogTrace" Icon="Refresh" Label="Perf Trace" Click="OutputLogTrace_Click"/>
                <AppBarButton x:Name="ClearLogTrace" Icon="Refresh" Label="Clear Trace" Click="ClearLogTrace_Click"/>
            </CommandBar.SecondaryCommands>

        </CommandBar>
    </Grid>

</Page>
